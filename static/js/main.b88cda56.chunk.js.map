{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","sweets","setSweets","useEffect","orderBy","onSnapshot","snapshot","sweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b88cda56.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React from \"react\";\nimport { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Sweet = ({ sweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this sweet?\"); // ok를 클릭하면 true 가 되고\n    if (ok) {\n      await dbService.doc(`sweets/${sweetObj.id}`).delete(); // ok 가 true 면 dbService doc 실행\n      await storageService.refFromURL(sweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`sweets/${sweetObj.id}`).update({\n      text: newSweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewSweet(value);\n  };\n  return (\n    <div className=\"sweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container sweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your sweet\"\n              value={newSweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Sweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{sweetObj.text}</h4>\n          {sweetObj.attachmentUrl && <img src={sweetObj.attachmentUrl} />}\n          {isOwner && ( // 작성자만 버튼을 볼 수 있음\n            <div className=\"sweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Sweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SweetFactory = ({ userObj }) => {\n  const [sweet, setSweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (sweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const sweetObj = {\n      text: sweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"sweets\").add(sweetObj);\n    setSweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0]; // input 하나의 파일만 받기 때문에 모든 파일 중에 첫번째 파일만 받게 함\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      // 파일 읽는 것이 끝나면 이벤트를 갖게 됨\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={sweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default SweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Sweet from \"components/Sweet\";\nimport SweetFactory from \"components/SweetFactory\";\n\nconst Home = ({ userObj }) => {\n  // Home 의 props 는 router에 의해서 받음\n  const [sweets, setSweets] = useState([]);\n  useEffect(() => {\n    dbService\n      .collection(\"sweets\")\n      .orderBy(\"createdAt\", \"desc\") // 생성 순서대로 sweet 나오게 함\n      .onSnapshot((snapshot) => {\n        // onSnapshot 데이터베이스에 무슨 일이 있으면 알림을 받음\n        const sweetArray = snapshot.docs.map((doc) => ({\n          // 새로운 스냅샷을 만들 때 배열을 만들고\u001c\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setSweets(sweetArray); // 그런다음 state에 배열을 집어넣는다\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <SweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {sweets.map((sweet) => (\n          // map 을 만들고 Sweet component를 만든다\n          <Sweet // sweet component는 두 개의 prop sweetObj, isOwner 를 가진다\n            key={sweet.id}\n            sweetObj={sweet} // sweet의 모든 데이터 autor , text , createdAt\n            isOwner={sweet.creatorId === userObj.uid} // isOwner 는 다이나믹한 prop 임 때때로 true, false\n          /> // sweet를 작성한 사람과 userObj.uid 가 같으면 true userObj는 Home의 props 에서 옴 (7번줄)\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      // onAuthStateChanged state 변화를 다루고 있음\n      if (user) {\n        // 로그인 로그아웃 할 때 일어나고 어플리케이션이 초기화 될 때 일어남\n        setUserObj({\n          // 왜 setUserObj(user) 가 아닌가? 오브젝트의 크기가 너무 커져서 리액트가 어떤 걸 랜더링 할 지 모른다\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args), // 이 function은 원하는 function 을 얻기 위한 중간 function이다\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args), // 이 function은 원하는 function 을 얻기 위한 중간 function이다\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./css/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}